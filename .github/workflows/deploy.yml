name: Deploy Django backend

on:
  push:
    branches:
      # - develop
      - main
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-and-deploy:
    name: Run tests, then deploy if green
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (CI)
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: backend
        run: |
          if [ -n "${{ secrets.DJANGO_SECRET_KEY }}" ]; then
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
          else
            python -c "import secrets; print('DJANGO_SECRET_KEY='+secrets.token_urlsafe(50))" > .env
          fi
          # Ensure tests have a deterministic test password & Stripe key available
          export STRIPE_SECRET_KEY=sk_test
          export ORDINALY_TEST_PASSWORD=test_password
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
          python manage.py test --verbosity 2 --failfast

      - name: Deploy via SSH
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: '22'
          script: |
            set -euo pipefail
            cd /opt/ordinaly/backend
            git fetch --all --prune
            git reset --hard origin/main
            if [ -f venv/bin/activate ]; then
              source venv/bin/activate
            else
              python -m venv venv
              source venv/bin/activate
            fi
            pip install -r requirements.txt
            python manage.py makemigrations && python manage.py migrate --noinput
            sudo systemctl restart gunicorn
