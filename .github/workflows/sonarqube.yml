name: SonarQube Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sample
          POSTGRES_USER: sample
          POSTGRES_PASSWORD: S3cur3P@ssw0rd2024
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DEBUG: 'True'
      DATABASE_NAME: sample
      DATABASE_USER: sample
      DATABASE_PASSWORD: S3cur3P@ssw0rd2024
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install backend dependencies
      working-directory: backend/
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run Django tests with coverage
      working-directory: backend
      run: |
        python3 manage.py makemigrations
        python3 manage.py migrate
        coverage run manage.py test || true
        coverage xml

    - name: Run SonarCloud analysis (new version)
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      with:
        args: >
          -Dsonar.projectKey=ordinaly
          -Dsonar.organization=ordinaly-software
          -Dsonar.python.coverage.reportPaths=backend/coverage.xml
          -Dsonar.sources=backend
          -Dsonar.language=py
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Show coverage summary
      working-directory: backend
      run: coverage report
